{"ast":null,"code":"import { switchMap, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MoviesService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://api.themoviedb.org/3';\n    this.apiKey = '8c247ea0b4b56ed2ff7d41c9a833aa77';\n  }\n  getMovies(type = 'upcoming', count = 12) {\n    return this.http.get(`${this.baseUrl}/movie/${type}?api_key=${this.apiKey}`).pipe(switchMap(res => {\n      return of(res.results.slice(0, count));\n    }));\n  }\n}\nMoviesService.ɵfac = function MoviesService_Factory(t) {\n  return new (t || MoviesService)(i0.ɵɵinject(i1.HttpClient));\n};\nMoviesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MoviesService,\n  factory: MoviesService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,SAAS,EAAEC,EAAE,QAAQ,MAAM;;;AAKpC,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,YAAO,GAAW,8BAA8B;IAChD,WAAM,GAAW,kCAAkC;EACZ;EAEvCC,SAAS,CAACC,OAAc,UAAU,EAAEC,QAAe,EAAE;IACnD,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAClB,GAAG,IAAI,CAACC,OAAO,UAAUH,IAAI,YAAY,IAAI,CAACI,MAAM,EAAE,CACrD,CAACC,IAAI,CAACX,SAAS,CAACY,GAAG,IAAG;MACrB,OAAOX,EAAE,CAACW,GAAG,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC,EAACP,KAAK,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;EACP;;;mBAXWL,aAAa;AAAA;;SAAbA,aAAa;EAAAa,SAAbb,aAAa;EAAAc,YAFZ;AAAM","names":["switchMap","of","MoviesService","constructor","http","getMovies","type","count","get","baseUrl","apiKey","pipe","res","results","slice","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\alehk\\OneDrive\\Desktop\\typescript\\movie-app\\src\\app\\services\\movies.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MovieDto } from '../models/movie'\nimport { switchMap, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MoviesService {\n  baseUrl: string = 'https://api.themoviedb.org/3';\n  apiKey: string = '8c247ea0b4b56ed2ff7d41c9a833aa77';\n  constructor(private http: HttpClient) {}\n\n  getMovies(type:string = 'upcoming', count:number = 12) {\n    return this.http.get<MovieDto>(\n      `${this.baseUrl}/movie/${type}?api_key=${this.apiKey}`\n      ).pipe(switchMap(res => {\n        return of(res.results.slice(0,count));\n      }));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}