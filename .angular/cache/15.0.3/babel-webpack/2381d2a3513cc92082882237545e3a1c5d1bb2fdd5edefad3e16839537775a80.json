{"ast":null,"code":"import { switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MoviesService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://api.themoviedb.org/3';\n    this.apiKey = '8c247ea0b4b56ed2ff7d41c9a833aa77';\n  }\n  getMovies(type = 'upcoming', count = 12) {\n    return this.http.get(`${this.baseUrl}/movie/${type}?api_key=${this.apiKey}`).pipe(switchMap(res => {\n      return of(res.results.slice(0, count));\n    }));\n  }\n  getMoviesVideos(id) {\n    return this.http.get(`${this.baseUrl}/movie/${id}/videos?api_key=${this.apiKey}`).pipe(switchMap(res => {\n      return of(res.results);\n    }));\n  }\n  getMovie(id) {\n    return this.http.get(`${this.baseUrl}/movie/${id}?api_key=${this.apiKey}`);\n  }\n  getTvs(type = 'latest', count = 12) {\n    return this.http.get(`${this.baseUrl}/tv/${type}?api_key=${this.apiKey}`).pipe(switchMap(res => {\n      return of(res.results.slice(0, count));\n    }));\n  }\n  searchMovies(page = 1) {\n    return this.http.get(`${this.baseUrl}/movie/popular?page=${page}&api_key=${this.apiKey}`).pipe(switchMap(res => {\n      return of(res.results);\n    }));\n  }\n}\nMoviesService.ɵfac = function MoviesService_Factory(t) {\n  return new (t || MoviesService)(i0.ɵɵinject(i1.HttpClient));\n};\nMoviesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MoviesService,\n  factory: MoviesService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,EAAE,QAAQ,MAAM;;;AAMzB,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHxB,YAAO,GAAW,8BAA8B;IAChD,WAAM,GAAW,kCAAkC;EAEZ;EAEvCC,SAAS,CAACC,OAAe,UAAU,EAAEC,QAAgB,EAAE;IACrD,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAW,GAAG,IAAI,CAACC,OAAO,UAAUH,IAAI,YAAY,IAAI,CAACI,MAAM,EAAE,CAAC,CAACC,IAAI,CACzFX,SAAS,CAAEY,GAAG,IAAI;MAChB,OAAOX,EAAE,CAACW,GAAG,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC,EAAEP,KAAK,CAAC,CAAC;IACxC,CAAC,CAAC,CACH;EACH;EAEAQ,eAAe,CAACC,EAAS;IACvB,OAAO,IAAI,CAACZ,IAAI,CAACI,GAAG,CAAe,GAAG,IAAI,CAACC,OAAO,UAAUO,EAAE,mBAAmB,IAAI,CAACN,MAAM,EAAE,CAAC,CAACC,IAAI,CAClGX,SAAS,CAAEY,GAAG,IAAI;MAChB,OAAOX,EAAE,CAACW,GAAG,CAACC,OAAO,CAAC;IACxB,CAAC,CAAC,CACH;EACH;EAEAI,QAAQ,CAACD,EAAU;IACjB,OAAO,IAAI,CAACZ,IAAI,CAACI,GAAG,CAAQ,GAAG,IAAI,CAACC,OAAO,UAAUO,EAAE,YAAY,IAAI,CAACN,MAAM,EAAE,CAAC;EACnF;EAEAQ,MAAM,CAACZ,OAAe,QAAQ,EAAEC,QAAgB,EAAE;IAChD,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAQ,GAAG,IAAI,CAACC,OAAO,OAAOH,IAAI,YAAY,IAAI,CAACI,MAAM,EAAE,CAAC,CAACC,IAAI,CACnFX,SAAS,CAAEY,GAAG,IAAI;MAChB,OAAOX,EAAE,CAACW,GAAG,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC,EAAEP,KAAK,CAAC,CAAC;IACxC,CAAC,CAAC,CACH;EACH;EAEAY,YAAY,CAACC,OAAe,CAAC;IAC3B,OAAO,IAAI,CAAChB,IAAI,CAACI,GAAG,CAAW,GAAG,IAAI,CAACC,OAAO,uBAAuBW,IAAI,YAAY,IAAI,CAACV,MAAM,EAAE,CAAC,CAACC,IAAI,CACtGX,SAAS,CAAEY,GAAG,IAAI;MAChB,OAAOX,EAAE,CAACW,GAAG,CAACC,OAAO,CAAC;IACxB,CAAC,CAAC,CACH;EACH;;;mBAxCWX,aAAa;AAAA;;SAAbA,aAAa;EAAAmB,SAAbnB,aAAa;EAAAoB,YAFZ;AAAM","names":["switchMap","of","MoviesService","constructor","http","getMovies","type","count","get","baseUrl","apiKey","pipe","res","results","slice","getMoviesVideos","id","getMovie","getTvs","searchMovies","page","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\alehk\\OneDrive\\Desktop\\typescript\\movie-app\\src\\app\\services\\movies.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Movie, MovieDto } from '../models/movie';\nimport { switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { TvDto } from '../models/tv';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MoviesService {\n  baseUrl: string = 'https://api.themoviedb.org/3';\n  apiKey: string = '8c247ea0b4b56ed2ff7d41c9a833aa77';\n\n  constructor(private http: HttpClient) {}\n\n  getMovies(type: string = 'upcoming', count: number = 12) {\n    return this.http.get<MovieDto>(`${this.baseUrl}/movie/${type}?api_key=${this.apiKey}`).pipe(\n      switchMap((res) => {\n        return of(res.results.slice(0, count));\n      })\n    );\n  }\n\n  getMoviesVideos(id:string) {\n    return this.http.get<MovieVideoDy>(`${this.baseUrl}/movie/${id}/videos?api_key=${this.apiKey}`).pipe(\n      switchMap((res) => {\n        return of(res.results);\n      })\n    );\n  }\n\n  getMovie(id: string) {\n    return this.http.get<Movie>(`${this.baseUrl}/movie/${id}?api_key=${this.apiKey}`);\n  }\n\n  getTvs(type: string = 'latest', count: number = 12) {\n    return this.http.get<TvDto>(`${this.baseUrl}/tv/${type}?api_key=${this.apiKey}`).pipe(\n      switchMap((res) => {\n        return of(res.results.slice(0, count));\n      })\n    );\n  }\n\n  searchMovies(page: number = 1) {\n    return this.http.get<MovieDto>(`${this.baseUrl}/movie/popular?page=${page}&api_key=${this.apiKey}`).pipe(\n      switchMap((res) => {\n        return of(res.results);\n      })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}